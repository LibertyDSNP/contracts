name: Release NPM/Docker @latest
on:
  release:
    types: [ released ]

jobs:
  publish-to-npm:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.15.5'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install 💾
        run: npm ci

      - name: NPM Contracts Version ⬆️
        working-directory: ./contracts
        run: npm version --new-version ${{ github.event.release.tag_name }} --no-git-tag-version

      - name: NPM Contracts Publish 🚂
        working-directory: ./contracts
        run: npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

  docker-latest:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push dsnp/ganache:latest
        id: docker_build_ganache
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ganache.Dockerfile
          tags: |
            dsnp/ganache:latest
            dsnp/ganache:${{ github.event.release.tag_name }}

      - name: Build and push dsnp/hardhat:latest
        id: docker_build_hardhat
        uses: docker/build-push-action@v2
        with:
          push: true
          file: hardhat.Dockerfile
          tags: |
            dsnp/hardhat:latest
            dsnp/hardhat:${{ github.event.release.tag_name }}

      - name: Build and push dsnp/openethereum:latest
        id: docker_build_openethereum
        uses: docker/build-push-action@v2
        with:
          push: true
          file: openethereum.Dockerfile
          tags: |
            dsnp/openethereum:latest
            dsnp/openethereum:${{ github.event.release.tag_name }}

      - name: Image digests
        run: |
          echo dsnp/hardhat ${{ steps.docker_build_hardhat.outputs.digest }}
          echo dsnp/ganache ${{ steps.docker_build_ganache.outputs.digest }}
          echo dsnp/openethereum ${{ steps.docker_build_openethereum.outputs.digest }}
